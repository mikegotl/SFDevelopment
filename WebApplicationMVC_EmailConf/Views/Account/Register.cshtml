@model WebApplicationMVC_EmailConf.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", new { token = ViewBag.token }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @*@Html.AntiForgeryToken()*@
    <h4>Create a new account.</h4>
    <hr />

    <div class="col-md-6">
        <h3>Your security is important to us.</h3>
        <h4>Password Requirements</h4>
        <ul>
            <li>
                Password must be at least 6 characters long
            </li>
            <li>
                Password must contain at least one special character
                (‘!’,’@@‘,’#’,’$’,’%’,’^’,’&’,’*’)
            </li>
            <li>Passwords must have at least one numeric digit (‘0’-‘9’)</li>
            <li>
                Passwords must have at least one uppercase (‘A’-‘Z’)
            </li>
            <li>
                You cannot reuse a previous password
            </li>
        </ul>
    </div>

    <div class="col-md-6">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>

        @if (string.IsNullOrEmpty(ViewBag.token))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.MemberTypeID, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("MemberTypeID", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p>
                    <label class="checkbox">
                        <input type="checkbox" id="iagree" />I agree to our <a href="~/Content/SpeechPlan Terms of Service v0-2.pdf" target="_blank">Terms and Conditions.</a>
                    </label>
                </p>
                <input type="submit" class="btn btn-default" id="register" disabled value="Register" />
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#iagree').change(function () {
            if ($("#iagree").is(':checked'))
                $("#register").prop("disabled", false);// checked
            else
                $("#register").prop("disabled", true); // unchecked
        });
    </script>
}